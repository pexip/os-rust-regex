Source: rust-regex
Section: rust
Priority: optional
Build-Depends: debhelper (>= 12),
 dh-cargo (>= 25),
 cargo:native <!nocheck>,
 rustc:native <!nocheck>,
 libstd-rust-dev <!nocheck>,
 librust-aho-corasick-0.7+default-dev (>= 0.7.18-~~) <!nocheck>,
 librust-memchr-2+default-dev (>= 2.4.0-~~) <!nocheck>,
 librust-regex-syntax-0.6+default-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-age-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-bool-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-case-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-gencat-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-perl-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-script-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6+unicode-segment-dev (>= 0.6.27-~~) <!nocheck>,
 librust-regex-syntax-0.6-dev (>= 0.6.27-~~) <!nocheck>
Maintainer: Debian Rust Maintainers <pkg-rust-maintainers@alioth-lists.debian.net>
Uploaders:
 Sylvestre Ledru <sylvestre@debian.org>,
 Robin Krahl <robin.krahl@ireas.org>,
 kpcyrd <git@rxv.cc>,
 Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Standards-Version: 4.6.1
Vcs-Git: https://salsa.debian.org/rust-team/debcargo-conf.git [src/regex]
Vcs-Browser: https://salsa.debian.org/rust-team/debcargo-conf/tree/master/src/regex
Homepage: https://github.com/rust-lang/regex
X-Cargo-Crate: regex
Rules-Requires-Root: no

Package: librust-regex-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-syntax-0.6-dev (>= 0.6.27-~~)
Recommends:
 librust-regex+default-dev (= ${binary:Version})
Suggests:
 librust-regex+aho-corasick-dev (= ${binary:Version}),
 librust-regex+memchr-dev (= ${binary:Version}),
 librust-regex+perf-dev (= ${binary:Version}),
 librust-regex+perf-literal-dev (= ${binary:Version}),
 librust-regex+unicode-dev (= ${binary:Version}),
 librust-regex+unicode-age-dev (= ${binary:Version}),
 librust-regex+unicode-bool-dev (= ${binary:Version}),
 librust-regex+unicode-case-dev (= ${binary:Version}),
 librust-regex+unicode-gencat-dev (= ${binary:Version}),
 librust-regex+unicode-perl-dev (= ${binary:Version}),
 librust-regex+unicode-script-dev (= ${binary:Version}),
 librust-regex+unicode-segment-dev (= ${binary:Version})
Provides:
 librust-regex+pattern-dev (= ${binary:Version}),
 librust-regex+perf-cache-dev (= ${binary:Version}),
 librust-regex+perf-dfa-dev (= ${binary:Version}),
 librust-regex+perf-inline-dev (= ${binary:Version}),
 librust-regex+std-dev (= ${binary:Version}),
 librust-regex+unstable-dev (= ${binary:Version}),
 librust-regex+use-std-dev (= ${binary:Version}),
 librust-regex-1-dev (= ${binary:Version}),
 librust-regex-1+pattern-dev (= ${binary:Version}),
 librust-regex-1+perf-cache-dev (= ${binary:Version}),
 librust-regex-1+perf-dfa-dev (= ${binary:Version}),
 librust-regex-1+perf-inline-dev (= ${binary:Version}),
 librust-regex-1+std-dev (= ${binary:Version}),
 librust-regex-1+unstable-dev (= ${binary:Version}),
 librust-regex-1+use-std-dev (= ${binary:Version}),
 librust-regex-1.7-dev (= ${binary:Version}),
 librust-regex-1.7+pattern-dev (= ${binary:Version}),
 librust-regex-1.7+perf-cache-dev (= ${binary:Version}),
 librust-regex-1.7+perf-dfa-dev (= ${binary:Version}),
 librust-regex-1.7+perf-inline-dev (= ${binary:Version}),
 librust-regex-1.7+std-dev (= ${binary:Version}),
 librust-regex-1.7+unstable-dev (= ${binary:Version}),
 librust-regex-1.7+use-std-dev (= ${binary:Version}),
 librust-regex-1.7.1-dev (= ${binary:Version}),
 librust-regex-1.7.1+pattern-dev (= ${binary:Version}),
 librust-regex-1.7.1+perf-cache-dev (= ${binary:Version}),
 librust-regex-1.7.1+perf-dfa-dev (= ${binary:Version}),
 librust-regex-1.7.1+perf-inline-dev (= ${binary:Version}),
 librust-regex-1.7.1+std-dev (= ${binary:Version}),
 librust-regex-1.7.1+unstable-dev (= ${binary:Version}),
 librust-regex-1.7.1+use-std-dev (= ${binary:Version})
Description: Regular expressions for Rust - Rust source code
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This package contains the source for the Rust regex crate, packaged by debcargo
 for use with cargo and dh-cargo.

Package: librust-regex+aho-corasick-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-aho-corasick-0.7+default-dev (>= 0.7.18-~~)
Provides:
 librust-regex-1+aho-corasick-dev (= ${binary:Version}),
 librust-regex-1.7+aho-corasick-dev (= ${binary:Version}),
 librust-regex-1.7.1+aho-corasick-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "aho-corasick"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "aho-corasick" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+default-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex+std-dev (= ${binary:Version}),
 librust-regex+perf-dev (= ${binary:Version}),
 librust-regex+unicode-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+default-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+default-dev (= ${binary:Version}),
 librust-regex-1.7+default-dev (= ${binary:Version}),
 librust-regex-1.7.1+default-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "default"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "default" for the Rust regex crate, by pulling
 in any additional dependencies needed by that feature.

Package: librust-regex+memchr-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-memchr-2+default-dev (>= 2.4.0-~~)
Provides:
 librust-regex-1+memchr-dev (= ${binary:Version}),
 librust-regex-1.7+memchr-dev (= ${binary:Version}),
 librust-regex-1.7.1+memchr-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "memchr"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "memchr" for the Rust regex crate, by pulling
 in any additional dependencies needed by that feature.

Package: librust-regex+perf-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex+perf-cache-dev (= ${binary:Version}),
 librust-regex+perf-dfa-dev (= ${binary:Version}),
 librust-regex+perf-inline-dev (= ${binary:Version}),
 librust-regex+perf-literal-dev (= ${binary:Version})
Provides:
 librust-regex-1+perf-dev (= ${binary:Version}),
 librust-regex-1.7+perf-dev (= ${binary:Version}),
 librust-regex-1.7.1+perf-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "perf"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "perf" for the Rust regex crate, by pulling in
 any additional dependencies needed by that feature.

Package: librust-regex+perf-literal-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex+aho-corasick-dev (= ${binary:Version}),
 librust-regex+memchr-dev (= ${binary:Version})
Provides:
 librust-regex-1+perf-literal-dev (= ${binary:Version}),
 librust-regex-1.7+perf-literal-dev (= ${binary:Version}),
 librust-regex-1.7.1+perf-literal-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "perf-literal"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "perf-literal" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex+unicode-age-dev (= ${binary:Version}),
 librust-regex+unicode-bool-dev (= ${binary:Version}),
 librust-regex+unicode-case-dev (= ${binary:Version}),
 librust-regex+unicode-gencat-dev (= ${binary:Version}),
 librust-regex+unicode-perl-dev (= ${binary:Version}),
 librust-regex+unicode-script-dev (= ${binary:Version}),
 librust-regex+unicode-segment-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode" for the Rust regex crate, by pulling
 in any additional dependencies needed by that feature.

Package: librust-regex+unicode-age-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-age-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-age-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-age-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-age-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-age"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-age" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-bool-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-bool-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-bool-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-bool-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-bool-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-bool"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-bool" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-case-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-case-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-case-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-case-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-case-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-case"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-case" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-gencat-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-gencat-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-gencat-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-gencat-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-gencat-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-gencat"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-gencat" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-perl-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-perl-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-perl-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-perl-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-perl-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-perl"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-perl" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-script-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-script-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-script-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-script-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-script-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-script"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-script" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.

Package: librust-regex+unicode-segment-dev
Architecture: any
Multi-Arch: same
Depends:
 ${misc:Depends},
 librust-regex-dev (= ${binary:Version}),
 librust-regex-syntax-0.6+unicode-segment-dev (>= 0.6.27-~~)
Provides:
 librust-regex-1+unicode-segment-dev (= ${binary:Version}),
 librust-regex-1.7+unicode-segment-dev (= ${binary:Version}),
 librust-regex-1.7.1+unicode-segment-dev (= ${binary:Version})
Description: Regular expressions for Rust - feature "unicode-segment"
 This implementation uses finite automata and guarantees linear time matching on
 all inputs.
 .
 This metapackage enables feature "unicode-segment" for the Rust regex crate, by
 pulling in any additional dependencies needed by that feature.
